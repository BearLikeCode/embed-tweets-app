{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClientRequestMaker = void 0;\n\nconst types_1 = require(\"../types\");\n\nconst TweetStream_1 = __importDefault(require(\"../stream/TweetStream\"));\n\nconst helpers_1 = require(\"../plugins/helpers\");\n\nconst helpers_2 = require(\"../helpers\");\n\nconst oauth1_helper_1 = __importDefault(require(\"./oauth1.helper\"));\n\nconst request_handler_helper_1 = __importDefault(require(\"./request-handler.helper\"));\n\nconst request_param_helper_1 = __importDefault(require(\"./request-param.helper\"));\n\nconst oauth2_helper_1 = require(\"./oauth2.helper\");\n\nclass ClientRequestMaker {\n  constructor(settings) {\n    this.rateLimits = {};\n    this.clientSettings = {};\n\n    if (settings) {\n      this.clientSettings = settings;\n    }\n  }\n  /** @deprecated - Switch to `@twitter-api-v2/plugin-rate-limit` */\n\n\n  getRateLimits() {\n    return this.rateLimits;\n  }\n\n  saveRateLimit(originalUrl, rateLimit) {\n    this.rateLimits[originalUrl] = rateLimit;\n  }\n  /** Send a new request and returns a wrapped `Promise<TwitterResponse<T>`. */\n\n\n  async send(requestParams) {\n    var _a, _b, _c, _d, _e; // Pre-request config hooks\n\n\n    if ((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length) {\n      const possibleResponse = await this.applyPreRequestConfigHooks(requestParams);\n\n      if (possibleResponse) {\n        return possibleResponse;\n      }\n    }\n\n    const args = this.getHttpRequestArgs(requestParams);\n    const options = {\n      method: args.method,\n      headers: args.headers,\n      timeout: requestParams.timeout,\n      agent: this.clientSettings.httpAgent\n    };\n    const enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n\n    if (args.body) {\n      request_param_helper_1.default.setBodyLengthHeader(options, args.body);\n    } // Pre-request hooks\n\n\n    if ((_b = this.clientSettings.plugins) === null || _b === void 0 ? void 0 : _b.length) {\n      await this.applyPreRequestHooks(requestParams, args, options);\n    }\n\n    let request = new request_handler_helper_1.default({\n      url: args.url,\n      options,\n      body: args.body,\n      rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n      requestEventDebugHandler: requestParams.requestEventDebugHandler,\n      compression: (_d = (_c = requestParams.compression) !== null && _c !== void 0 ? _c : this.clientSettings.compression) !== null && _d !== void 0 ? _d : true,\n      forceParseMode: requestParams.forceParseMode\n    }).makeRequest();\n\n    if ((0, helpers_1.hasRequestErrorPlugins)(this)) {\n      request = this.applyResponseErrorHooks(requestParams, args, options, request);\n    }\n\n    const response = await request; // Post-request hooks\n\n    if ((_e = this.clientSettings.plugins) === null || _e === void 0 ? void 0 : _e.length) {\n      const responseOverride = await this.applyPostRequestHooks(requestParams, args, options, response);\n\n      if (responseOverride) {\n        return responseOverride.value;\n      }\n    }\n\n    return response;\n  }\n\n  sendStream(requestParams) {\n    var _a, _b; // Pre-request hooks\n\n\n    if (this.clientSettings.plugins) {\n      this.applyPreStreamRequestConfigHooks(requestParams);\n    }\n\n    const args = this.getHttpRequestArgs(requestParams);\n    const options = {\n      method: args.method,\n      headers: args.headers,\n      agent: this.clientSettings.httpAgent\n    };\n    const enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n    const enableAutoConnect = requestParams.autoConnect !== false;\n\n    if (args.body) {\n      request_param_helper_1.default.setBodyLengthHeader(options, args.body);\n    }\n\n    const requestData = {\n      url: args.url,\n      options,\n      body: args.body,\n      rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n      payloadIsError: requestParams.payloadIsError,\n      compression: (_b = (_a = requestParams.compression) !== null && _a !== void 0 ? _a : this.clientSettings.compression) !== null && _b !== void 0 ? _b : true\n    };\n    const stream = new TweetStream_1.default(requestData);\n\n    if (!enableAutoConnect) {\n      return stream;\n    }\n\n    return stream.connect();\n  }\n  /* Token helpers */\n\n\n  initializeToken(token) {\n    if (typeof token === 'string') {\n      this.bearerToken = token;\n    } else if (typeof token === 'object' && 'appKey' in token) {\n      this.consumerToken = token.appKey;\n      this.consumerSecret = token.appSecret;\n\n      if (token.accessToken && token.accessSecret) {\n        this.accessToken = token.accessToken;\n        this.accessSecret = token.accessSecret;\n      }\n\n      this._oauth = this.buildOAuth();\n    } else if (typeof token === 'object' && 'username' in token) {\n      const key = encodeURIComponent(token.username) + ':' + encodeURIComponent(token.password);\n      this.basicToken = Buffer.from(key).toString('base64');\n    } else if (typeof token === 'object' && 'clientId' in token) {\n      this.clientId = token.clientId;\n      this.clientSecret = token.clientSecret;\n    }\n  }\n\n  getActiveTokens() {\n    if (this.bearerToken) {\n      return {\n        type: 'oauth2',\n        bearerToken: this.bearerToken\n      };\n    } else if (this.basicToken) {\n      return {\n        type: 'basic',\n        token: this.basicToken\n      };\n    } else if (this.consumerSecret && this._oauth) {\n      return {\n        type: 'oauth-1.0a',\n        appKey: this.consumerToken,\n        appSecret: this.consumerSecret,\n        accessToken: this.accessToken,\n        accessSecret: this.accessSecret\n      };\n    } else if (this.clientId) {\n      return {\n        type: 'oauth2-user',\n        clientId: this.clientId\n      };\n    }\n\n    return {\n      type: 'none'\n    };\n  }\n\n  buildOAuth() {\n    if (!this.consumerSecret || !this.consumerToken) throw new Error('Invalid consumer tokens');\n    return new oauth1_helper_1.default({\n      consumerKeys: {\n        key: this.consumerToken,\n        secret: this.consumerSecret\n      }\n    });\n  }\n\n  getOAuthAccessTokens() {\n    if (!this.accessSecret || !this.accessToken) return;\n    return {\n      key: this.accessToken,\n      secret: this.accessSecret\n    };\n  }\n  /* Plugin helpers */\n\n\n  getPlugins() {\n    var _a;\n\n    return (_a = this.clientSettings.plugins) !== null && _a !== void 0 ? _a : [];\n  }\n\n  hasPlugins() {\n    var _a;\n\n    return !!((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length);\n  }\n\n  async applyPluginMethod(method, args) {\n    var _a;\n\n    let returnValue;\n\n    for (const plugin of this.getPlugins()) {\n      const value = await ((_a = plugin[method]) === null || _a === void 0 ? void 0 : _a.call(plugin, args));\n\n      if (value && value instanceof types_1.TwitterApiPluginResponseOverride) {\n        returnValue = value;\n      }\n    }\n\n    return returnValue;\n  }\n  /* Request helpers */\n\n\n  writeAuthHeaders(_ref) {\n    let {\n      headers,\n      bodyInSignature,\n      url,\n      method,\n      query,\n      body\n    } = _ref;\n    headers = { ...headers\n    };\n\n    if (this.bearerToken) {\n      headers.Authorization = 'Bearer ' + this.bearerToken;\n    } else if (this.basicToken) {\n      // Basic auth, to request a bearer token\n      headers.Authorization = 'Basic ' + this.basicToken;\n    } else if (this.clientId && this.clientSecret) {\n      // Basic auth with clientId + clientSecret\n      headers.Authorization = 'Basic ' + oauth2_helper_1.OAuth2Helper.getAuthHeader(this.clientId, this.clientSecret);\n    } else if (this.consumerSecret && this._oauth) {\n      // Merge query and body\n      const data = bodyInSignature ? request_param_helper_1.default.mergeQueryAndBodyForOAuth(query, body) : query;\n\n      const auth = this._oauth.authorize({\n        url: url.toString(),\n        method,\n        data\n      }, this.getOAuthAccessTokens());\n\n      headers = { ...headers,\n        ...this._oauth.toHeader(auth)\n      };\n    }\n\n    return headers;\n  }\n\n  getUrlObjectFromUrlString(url) {\n    // Add protocol to URL if needed\n    if (!url.startsWith('http')) {\n      url = 'https://' + url;\n    } // Convert URL to object that will receive all URL modifications\n\n\n    return new URL(url);\n  }\n\n  getHttpRequestArgs(_ref2) {\n    let {\n      url: stringUrl,\n      method,\n      query: rawQuery = {},\n      body: rawBody = {},\n      headers,\n      forceBodyMode,\n      enableAuth,\n      params\n    } = _ref2;\n    let body = undefined;\n    method = method.toUpperCase();\n    headers = headers !== null && headers !== void 0 ? headers : {}; // Add user agent header (Twitter recommends it)\n\n    if (!headers['x-user-agent']) {\n      headers['x-user-agent'] = 'Node.twitter-api-v2';\n    }\n\n    const url = this.getUrlObjectFromUrlString(stringUrl); // URL without query string to save as endpoint name\n\n    const rawUrl = url.origin + url.pathname; // Apply URL parameters\n\n    if (params) {\n      request_param_helper_1.default.applyRequestParametersToUrl(url, params);\n    } // Build a URL without anything in QS, and QSP in query\n\n\n    const query = request_param_helper_1.default.formatQueryToString(rawQuery);\n    request_param_helper_1.default.moveUrlQueryParamsIntoObject(url, query); // Delete undefined parameters\n\n    if (!(rawBody instanceof Buffer)) {\n      (0, helpers_2.trimUndefinedProperties)(rawBody);\n    } // OAuth signature should not include parameters when using multipart.\n\n\n    const bodyType = forceBodyMode !== null && forceBodyMode !== void 0 ? forceBodyMode : request_param_helper_1.default.autoDetectBodyType(url); // If undefined or true, enable auth by headers\n\n    if (enableAuth !== false) {\n      // OAuth needs body signature only if body is URL encoded.\n      const bodyInSignature = ClientRequestMaker.BODY_METHODS.has(method) && bodyType === 'url';\n      headers = this.writeAuthHeaders({\n        headers,\n        bodyInSignature,\n        method,\n        query,\n        url,\n        body: rawBody\n      });\n    }\n\n    if (ClientRequestMaker.BODY_METHODS.has(method)) {\n      body = request_param_helper_1.default.constructBodyParams(rawBody, headers, bodyType) || undefined;\n    }\n\n    request_param_helper_1.default.addQueryParamsToUrl(url, query);\n    return {\n      rawUrl,\n      url,\n      method,\n      headers,\n      body\n    };\n  }\n  /* Plugin helpers */\n\n\n  async applyPreRequestConfigHooks(requestParams) {\n    var _a;\n\n    const url = this.getUrlObjectFromUrlString(requestParams.url);\n\n    for (const plugin of this.getPlugins()) {\n      const result = await ((_a = plugin.onBeforeRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n        client: this,\n        url,\n        params: requestParams\n      }));\n\n      if (result) {\n        return result;\n      }\n    }\n  }\n\n  applyPreStreamRequestConfigHooks(requestParams) {\n    var _a;\n\n    const url = this.getUrlObjectFromUrlString(requestParams.url);\n\n    for (const plugin of this.getPlugins()) {\n      (_a = plugin.onBeforeStreamRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n        client: this,\n        url,\n        params: requestParams\n      });\n    }\n  }\n\n  async applyPreRequestHooks(requestParams, computedParams, requestOptions) {\n    await this.applyPluginMethod('onBeforeRequest', {\n      client: this,\n      url: this.getUrlObjectFromUrlString(requestParams.url),\n      params: requestParams,\n      computedParams,\n      requestOptions\n    });\n  }\n\n  async applyPostRequestHooks(requestParams, computedParams, requestOptions, response) {\n    return await this.applyPluginMethod('onAfterRequest', {\n      client: this,\n      url: this.getUrlObjectFromUrlString(requestParams.url),\n      params: requestParams,\n      computedParams,\n      requestOptions,\n      response\n    });\n  }\n\n  applyResponseErrorHooks(requestParams, computedParams, requestOptions, promise) {\n    return promise.catch(helpers_1.applyResponseHooks.bind(this, requestParams, computedParams, requestOptions));\n  }\n\n}\n\nexports.ClientRequestMaker = ClientRequestMaker;\nClientRequestMaker.BODY_METHODS = new Set(['POST', 'PUT', 'PATCH']);","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","ClientRequestMaker","types_1","require","TweetStream_1","helpers_1","helpers_2","oauth1_helper_1","request_handler_helper_1","request_param_helper_1","oauth2_helper_1","constructor","settings","rateLimits","clientSettings","getRateLimits","saveRateLimit","originalUrl","rateLimit","send","requestParams","_a","_b","_c","_d","_e","plugins","length","possibleResponse","applyPreRequestConfigHooks","args","getHttpRequestArgs","options","method","headers","timeout","agent","httpAgent","enableRateLimitSave","body","default","setBodyLengthHeader","applyPreRequestHooks","request","url","rateLimitSaver","bind","rawUrl","undefined","requestEventDebugHandler","compression","forceParseMode","makeRequest","hasRequestErrorPlugins","applyResponseErrorHooks","response","responseOverride","applyPostRequestHooks","sendStream","applyPreStreamRequestConfigHooks","enableAutoConnect","autoConnect","requestData","payloadIsError","stream","connect","initializeToken","token","bearerToken","consumerToken","appKey","consumerSecret","appSecret","accessToken","accessSecret","_oauth","buildOAuth","key","encodeURIComponent","username","password","basicToken","Buffer","from","toString","clientId","clientSecret","getActiveTokens","type","Error","consumerKeys","secret","getOAuthAccessTokens","getPlugins","hasPlugins","applyPluginMethod","returnValue","plugin","call","TwitterApiPluginResponseOverride","writeAuthHeaders","bodyInSignature","query","Authorization","OAuth2Helper","getAuthHeader","data","mergeQueryAndBodyForOAuth","auth","authorize","toHeader","getUrlObjectFromUrlString","startsWith","URL","stringUrl","rawQuery","rawBody","forceBodyMode","enableAuth","params","toUpperCase","origin","pathname","applyRequestParametersToUrl","formatQueryToString","moveUrlQueryParamsIntoObject","trimUndefinedProperties","bodyType","autoDetectBodyType","BODY_METHODS","has","constructBodyParams","addQueryParamsToUrl","result","onBeforeRequestConfig","client","onBeforeStreamRequestConfig","computedParams","requestOptions","promise","catch","applyResponseHooks","Set"],"sources":["/Users/user/Sites/twits_app/twits/node_modules/twitter-api-v2/dist/client-mixins/request-maker.mixin.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientRequestMaker = void 0;\nconst types_1 = require(\"../types\");\nconst TweetStream_1 = __importDefault(require(\"../stream/TweetStream\"));\nconst helpers_1 = require(\"../plugins/helpers\");\nconst helpers_2 = require(\"../helpers\");\nconst oauth1_helper_1 = __importDefault(require(\"./oauth1.helper\"));\nconst request_handler_helper_1 = __importDefault(require(\"./request-handler.helper\"));\nconst request_param_helper_1 = __importDefault(require(\"./request-param.helper\"));\nconst oauth2_helper_1 = require(\"./oauth2.helper\");\nclass ClientRequestMaker {\n    constructor(settings) {\n        this.rateLimits = {};\n        this.clientSettings = {};\n        if (settings) {\n            this.clientSettings = settings;\n        }\n    }\n    /** @deprecated - Switch to `@twitter-api-v2/plugin-rate-limit` */\n    getRateLimits() {\n        return this.rateLimits;\n    }\n    saveRateLimit(originalUrl, rateLimit) {\n        this.rateLimits[originalUrl] = rateLimit;\n    }\n    /** Send a new request and returns a wrapped `Promise<TwitterResponse<T>`. */\n    async send(requestParams) {\n        var _a, _b, _c, _d, _e;\n        // Pre-request config hooks\n        if ((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length) {\n            const possibleResponse = await this.applyPreRequestConfigHooks(requestParams);\n            if (possibleResponse) {\n                return possibleResponse;\n            }\n        }\n        const args = this.getHttpRequestArgs(requestParams);\n        const options = {\n            method: args.method,\n            headers: args.headers,\n            timeout: requestParams.timeout,\n            agent: this.clientSettings.httpAgent,\n        };\n        const enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n        if (args.body) {\n            request_param_helper_1.default.setBodyLengthHeader(options, args.body);\n        }\n        // Pre-request hooks\n        if ((_b = this.clientSettings.plugins) === null || _b === void 0 ? void 0 : _b.length) {\n            await this.applyPreRequestHooks(requestParams, args, options);\n        }\n        let request = new request_handler_helper_1.default({\n            url: args.url,\n            options,\n            body: args.body,\n            rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n            requestEventDebugHandler: requestParams.requestEventDebugHandler,\n            compression: (_d = (_c = requestParams.compression) !== null && _c !== void 0 ? _c : this.clientSettings.compression) !== null && _d !== void 0 ? _d : true,\n            forceParseMode: requestParams.forceParseMode,\n        })\n            .makeRequest();\n        if ((0, helpers_1.hasRequestErrorPlugins)(this)) {\n            request = this.applyResponseErrorHooks(requestParams, args, options, request);\n        }\n        const response = await request;\n        // Post-request hooks\n        if ((_e = this.clientSettings.plugins) === null || _e === void 0 ? void 0 : _e.length) {\n            const responseOverride = await this.applyPostRequestHooks(requestParams, args, options, response);\n            if (responseOverride) {\n                return responseOverride.value;\n            }\n        }\n        return response;\n    }\n    sendStream(requestParams) {\n        var _a, _b;\n        // Pre-request hooks\n        if (this.clientSettings.plugins) {\n            this.applyPreStreamRequestConfigHooks(requestParams);\n        }\n        const args = this.getHttpRequestArgs(requestParams);\n        const options = {\n            method: args.method,\n            headers: args.headers,\n            agent: this.clientSettings.httpAgent,\n        };\n        const enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n        const enableAutoConnect = requestParams.autoConnect !== false;\n        if (args.body) {\n            request_param_helper_1.default.setBodyLengthHeader(options, args.body);\n        }\n        const requestData = {\n            url: args.url,\n            options,\n            body: args.body,\n            rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n            payloadIsError: requestParams.payloadIsError,\n            compression: (_b = (_a = requestParams.compression) !== null && _a !== void 0 ? _a : this.clientSettings.compression) !== null && _b !== void 0 ? _b : true,\n        };\n        const stream = new TweetStream_1.default(requestData);\n        if (!enableAutoConnect) {\n            return stream;\n        }\n        return stream.connect();\n    }\n    /* Token helpers */\n    initializeToken(token) {\n        if (typeof token === 'string') {\n            this.bearerToken = token;\n        }\n        else if (typeof token === 'object' && 'appKey' in token) {\n            this.consumerToken = token.appKey;\n            this.consumerSecret = token.appSecret;\n            if (token.accessToken && token.accessSecret) {\n                this.accessToken = token.accessToken;\n                this.accessSecret = token.accessSecret;\n            }\n            this._oauth = this.buildOAuth();\n        }\n        else if (typeof token === 'object' && 'username' in token) {\n            const key = encodeURIComponent(token.username) + ':' + encodeURIComponent(token.password);\n            this.basicToken = Buffer.from(key).toString('base64');\n        }\n        else if (typeof token === 'object' && 'clientId' in token) {\n            this.clientId = token.clientId;\n            this.clientSecret = token.clientSecret;\n        }\n    }\n    getActiveTokens() {\n        if (this.bearerToken) {\n            return {\n                type: 'oauth2',\n                bearerToken: this.bearerToken,\n            };\n        }\n        else if (this.basicToken) {\n            return {\n                type: 'basic',\n                token: this.basicToken,\n            };\n        }\n        else if (this.consumerSecret && this._oauth) {\n            return {\n                type: 'oauth-1.0a',\n                appKey: this.consumerToken,\n                appSecret: this.consumerSecret,\n                accessToken: this.accessToken,\n                accessSecret: this.accessSecret,\n            };\n        }\n        else if (this.clientId) {\n            return {\n                type: 'oauth2-user',\n                clientId: this.clientId,\n            };\n        }\n        return { type: 'none' };\n    }\n    buildOAuth() {\n        if (!this.consumerSecret || !this.consumerToken)\n            throw new Error('Invalid consumer tokens');\n        return new oauth1_helper_1.default({\n            consumerKeys: { key: this.consumerToken, secret: this.consumerSecret },\n        });\n    }\n    getOAuthAccessTokens() {\n        if (!this.accessSecret || !this.accessToken)\n            return;\n        return {\n            key: this.accessToken,\n            secret: this.accessSecret,\n        };\n    }\n    /* Plugin helpers */\n    getPlugins() {\n        var _a;\n        return (_a = this.clientSettings.plugins) !== null && _a !== void 0 ? _a : [];\n    }\n    hasPlugins() {\n        var _a;\n        return !!((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length);\n    }\n    async applyPluginMethod(method, args) {\n        var _a;\n        let returnValue;\n        for (const plugin of this.getPlugins()) {\n            const value = await ((_a = plugin[method]) === null || _a === void 0 ? void 0 : _a.call(plugin, args));\n            if (value && value instanceof types_1.TwitterApiPluginResponseOverride) {\n                returnValue = value;\n            }\n        }\n        return returnValue;\n    }\n    /* Request helpers */\n    writeAuthHeaders({ headers, bodyInSignature, url, method, query, body }) {\n        headers = { ...headers };\n        if (this.bearerToken) {\n            headers.Authorization = 'Bearer ' + this.bearerToken;\n        }\n        else if (this.basicToken) {\n            // Basic auth, to request a bearer token\n            headers.Authorization = 'Basic ' + this.basicToken;\n        }\n        else if (this.clientId && this.clientSecret) {\n            // Basic auth with clientId + clientSecret\n            headers.Authorization = 'Basic ' + oauth2_helper_1.OAuth2Helper.getAuthHeader(this.clientId, this.clientSecret);\n        }\n        else if (this.consumerSecret && this._oauth) {\n            // Merge query and body\n            const data = bodyInSignature ? request_param_helper_1.default.mergeQueryAndBodyForOAuth(query, body) : query;\n            const auth = this._oauth.authorize({\n                url: url.toString(),\n                method,\n                data,\n            }, this.getOAuthAccessTokens());\n            headers = { ...headers, ...this._oauth.toHeader(auth) };\n        }\n        return headers;\n    }\n    getUrlObjectFromUrlString(url) {\n        // Add protocol to URL if needed\n        if (!url.startsWith('http')) {\n            url = 'https://' + url;\n        }\n        // Convert URL to object that will receive all URL modifications\n        return new URL(url);\n    }\n    getHttpRequestArgs({ url: stringUrl, method, query: rawQuery = {}, body: rawBody = {}, headers, forceBodyMode, enableAuth, params, }) {\n        let body = undefined;\n        method = method.toUpperCase();\n        headers = headers !== null && headers !== void 0 ? headers : {};\n        // Add user agent header (Twitter recommends it)\n        if (!headers['x-user-agent']) {\n            headers['x-user-agent'] = 'Node.twitter-api-v2';\n        }\n        const url = this.getUrlObjectFromUrlString(stringUrl);\n        // URL without query string to save as endpoint name\n        const rawUrl = url.origin + url.pathname;\n        // Apply URL parameters\n        if (params) {\n            request_param_helper_1.default.applyRequestParametersToUrl(url, params);\n        }\n        // Build a URL without anything in QS, and QSP in query\n        const query = request_param_helper_1.default.formatQueryToString(rawQuery);\n        request_param_helper_1.default.moveUrlQueryParamsIntoObject(url, query);\n        // Delete undefined parameters\n        if (!(rawBody instanceof Buffer)) {\n            (0, helpers_2.trimUndefinedProperties)(rawBody);\n        }\n        // OAuth signature should not include parameters when using multipart.\n        const bodyType = forceBodyMode !== null && forceBodyMode !== void 0 ? forceBodyMode : request_param_helper_1.default.autoDetectBodyType(url);\n        // If undefined or true, enable auth by headers\n        if (enableAuth !== false) {\n            // OAuth needs body signature only if body is URL encoded.\n            const bodyInSignature = ClientRequestMaker.BODY_METHODS.has(method) && bodyType === 'url';\n            headers = this.writeAuthHeaders({ headers, bodyInSignature, method, query, url, body: rawBody });\n        }\n        if (ClientRequestMaker.BODY_METHODS.has(method)) {\n            body = request_param_helper_1.default.constructBodyParams(rawBody, headers, bodyType) || undefined;\n        }\n        request_param_helper_1.default.addQueryParamsToUrl(url, query);\n        return {\n            rawUrl,\n            url,\n            method,\n            headers,\n            body,\n        };\n    }\n    /* Plugin helpers */\n    async applyPreRequestConfigHooks(requestParams) {\n        var _a;\n        const url = this.getUrlObjectFromUrlString(requestParams.url);\n        for (const plugin of this.getPlugins()) {\n            const result = await ((_a = plugin.onBeforeRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n                client: this,\n                url,\n                params: requestParams,\n            }));\n            if (result) {\n                return result;\n            }\n        }\n    }\n    applyPreStreamRequestConfigHooks(requestParams) {\n        var _a;\n        const url = this.getUrlObjectFromUrlString(requestParams.url);\n        for (const plugin of this.getPlugins()) {\n            (_a = plugin.onBeforeStreamRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n                client: this,\n                url,\n                params: requestParams,\n            });\n        }\n    }\n    async applyPreRequestHooks(requestParams, computedParams, requestOptions) {\n        await this.applyPluginMethod('onBeforeRequest', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n        });\n    }\n    async applyPostRequestHooks(requestParams, computedParams, requestOptions, response) {\n        return await this.applyPluginMethod('onAfterRequest', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n            response,\n        });\n    }\n    applyResponseErrorHooks(requestParams, computedParams, requestOptions, promise) {\n        return promise.catch(helpers_1.applyResponseHooks.bind(this, requestParams, computedParams, requestOptions));\n    }\n}\nexports.ClientRequestMaker = ClientRequestMaker;\nClientRequestMaker.BODY_METHODS = new Set(['POST', 'PUT', 'PATCH']);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}