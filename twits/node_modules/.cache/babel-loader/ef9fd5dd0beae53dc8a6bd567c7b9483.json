{"ast":null,"code":"var _jsxFileName = \"/Users/user/Sites/twits_app/twits/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport TweetEmbed from 'react-tweet-embed';\nimport { TwitterApi } from 'twitter-api-v2';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const client = new TwitterApi('AAAAAAAAAAAAAAAAAAAAAIOffAEAAAAAqQdiZ%2Bn0Fn1GsDx1lOoRRFjY2Io%3D8BM1quwtQjVL2xKdZjUqa0lGhvu9XNbnbb0bEFVbHKHKGl0P3E');\n  const [tweets, setTweets] = useState([]);\n\n  const getTwits = async () => {\n    const tweetsData = await client.v2.search('#ethereum');\n    console.log(tweetsData.data.data);\n    setTweets(tweetsData);\n  };\n\n  useEffect(() => {\n    getTwits();\n  }, [tweets]); // Consume every possible tweet of jsTweets (until rate limit is hit)\n  // for await (const tweet of jsTweets) {\n  //   console.log(tweet);\n  // }\n  // const tweets = [\n  //   \"1549673116686864384\",\n  //   \"1549514986644545536\",\n  //   \"1549683893309059073\",\n  //   \"1549635215546429441\",\n  //   \"692527862369357824\"\n  // ]\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixedWidth\",\n      children: \"tweets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tlPhWtKxaAnAviYMgoNvFaAwXFo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","TweetEmbed","TwitterApi","App","client","tweets","setTweets","getTwits","tweetsData","v2","search","console","log","data"],"sources":["/Users/user/Sites/twits_app/twits/src/App.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport TweetEmbed from 'react-tweet-embed';\nimport { TwitterApi } from 'twitter-api-v2';\nimport './App.css'\n\nfunction App() {\n  const client = new TwitterApi('AAAAAAAAAAAAAAAAAAAAAIOffAEAAAAAqQdiZ%2Bn0Fn1GsDx1lOoRRFjY2Io%3D8BM1quwtQjVL2xKdZjUqa0lGhvu9XNbnbb0bEFVbHKHKGl0P3E')\n  const [tweets, setTweets] = useState([])\n  const getTwits = async() => {\n    const tweetsData = await client.v2.search('#ethereum');\n    console.log(tweetsData.data.data)\n    setTweets(tweetsData)\n}\n  useEffect(() => {\n    getTwits()\n  }, [tweets])\n\n// Consume every possible tweet of jsTweets (until rate limit is hit)\n// for await (const tweet of jsTweets) {\n//   console.log(tweet);\n// }\n  // const tweets = [\n  //   \"1549673116686864384\",\n  //   \"1549514986644545536\",\n  //   \"1549683893309059073\",\n  //   \"1549635215546429441\",\n  //   \"692527862369357824\"\n  // ]\n  return (\n    <div className='flex'>\n      <div className='fixedWidth'>\n        tweets\n      {/* {tweets.map((tweet) => <TweetEmbed key={tweet} tweetId={tweet} />)} */}\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,MAAM,GAAG,IAAIF,UAAJ,CAAe,oHAAf,CAAf;EACA,MAAM,CAACG,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;EACA,MAAMO,QAAQ,GAAG,YAAW;IAC1B,MAAMC,UAAU,GAAG,MAAMJ,MAAM,CAACK,EAAP,CAAUC,MAAV,CAAiB,WAAjB,CAAzB;IACAC,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACK,IAAX,CAAgBA,IAA5B;IACAP,SAAS,CAACE,UAAD,CAAT;EACH,CAJC;;EAKAT,SAAS,CAAC,MAAM;IACdQ,QAAQ;EACT,CAFQ,EAEN,CAACF,MAAD,CAFM,CAAT,CARa,CAYf;EACA;EACA;EACA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,uBACE;MAAK,SAAS,EAAC,YAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GA/BQF,G;;KAAAA,G;AAiCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}