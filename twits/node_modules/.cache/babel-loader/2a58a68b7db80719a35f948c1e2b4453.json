{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FormDataHelper = void 0;\n\nconst helpers_1 = require(\"../helpers\"); // This class is partially inspired by https://github.com/form-data/form-data/blob/master/lib/form_data.js\n// All credits to their authors.\n\n\nclass FormDataHelper {\n  constructor() {\n    this._boundary = '';\n    this._chunks = [];\n  }\n\n  bodyAppend() {\n    for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n\n    const allAsBuffer = values.map(val => val instanceof Buffer ? val : Buffer.from(val));\n\n    this._chunks.push(...allAsBuffer);\n  }\n\n  append(field, value, contentType) {\n    const convertedValue = value instanceof Buffer ? value : value.toString();\n    const header = this.getMultipartHeader(field, convertedValue, contentType);\n    this.bodyAppend(header, convertedValue, FormDataHelper.LINE_BREAK);\n  }\n\n  getHeaders() {\n    return {\n      'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n    };\n  }\n  /** Length of form-data (including footer length). */\n\n\n  getLength() {\n    return this._chunks.reduce((acc, cur) => acc + cur.length, this.getMultipartFooter().length);\n  }\n\n  getBuffer() {\n    const allChunks = [...this._chunks, this.getMultipartFooter()];\n    const totalBuffer = Buffer.alloc(this.getLength());\n    let i = 0;\n\n    for (const chunk of allChunks) {\n      for (let j = 0; j < chunk.length; i++, j++) {\n        totalBuffer[i] = chunk[j];\n      }\n    }\n\n    return totalBuffer;\n  }\n\n  getBoundary() {\n    if (!this._boundary) {\n      this.generateBoundary();\n    }\n\n    return this._boundary;\n  }\n\n  generateBoundary() {\n    // This generates a 50 character boundary similar to those used by Firefox.\n    let boundary = '--------------------------';\n\n    for (let i = 0; i < 24; i++) {\n      boundary += Math.floor(Math.random() * 10).toString(16);\n    }\n\n    this._boundary = boundary;\n  }\n\n  getMultipartHeader(field, value, contentType) {\n    // In this lib no need to guess more the content type, octet stream is ok of buffers\n    if (!contentType) {\n      contentType = value instanceof Buffer ? FormDataHelper.DEFAULT_CONTENT_TYPE : '';\n    }\n\n    const headers = {\n      'Content-Disposition': ['form-data', `name=\"${field}\"`],\n      'Content-Type': contentType\n    };\n    let contents = '';\n\n    for (const [prop, header] of Object.entries(headers)) {\n      // skip nullish headers.\n      if (!header.length) {\n        continue;\n      }\n\n      contents += prop + ': ' + (0, helpers_1.arrayWrap)(header).join('; ') + FormDataHelper.LINE_BREAK;\n    }\n\n    return '--' + this.getBoundary() + FormDataHelper.LINE_BREAK + contents + FormDataHelper.LINE_BREAK;\n  }\n\n  getMultipartFooter() {\n    if (this._footerChunk) {\n      return this._footerChunk;\n    }\n\n    return this._footerChunk = Buffer.from('--' + this.getBoundary() + '--' + FormDataHelper.LINE_BREAK);\n  }\n\n}\n\nexports.FormDataHelper = FormDataHelper;\nFormDataHelper.LINE_BREAK = '\\r\\n';\nFormDataHelper.DEFAULT_CONTENT_TYPE = 'application/octet-stream';","map":{"version":3,"names":["Object","defineProperty","exports","value","FormDataHelper","helpers_1","require","constructor","_boundary","_chunks","bodyAppend","values","allAsBuffer","map","val","Buffer","from","push","append","field","contentType","convertedValue","toString","header","getMultipartHeader","LINE_BREAK","getHeaders","getBoundary","getLength","reduce","acc","cur","length","getMultipartFooter","getBuffer","allChunks","totalBuffer","alloc","i","chunk","j","generateBoundary","boundary","Math","floor","random","DEFAULT_CONTENT_TYPE","headers","contents","prop","entries","arrayWrap","join","_footerChunk"],"sources":["/Users/user/Sites/twits_app/twits/node_modules/twitter-api-v2/dist/client-mixins/form-data.helper.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FormDataHelper = void 0;\nconst helpers_1 = require(\"../helpers\");\n// This class is partially inspired by https://github.com/form-data/form-data/blob/master/lib/form_data.js\n// All credits to their authors.\nclass FormDataHelper {\n    constructor() {\n        this._boundary = '';\n        this._chunks = [];\n    }\n    bodyAppend(...values) {\n        const allAsBuffer = values.map(val => val instanceof Buffer ? val : Buffer.from(val));\n        this._chunks.push(...allAsBuffer);\n    }\n    append(field, value, contentType) {\n        const convertedValue = value instanceof Buffer ? value : value.toString();\n        const header = this.getMultipartHeader(field, convertedValue, contentType);\n        this.bodyAppend(header, convertedValue, FormDataHelper.LINE_BREAK);\n    }\n    getHeaders() {\n        return {\n            'content-type': 'multipart/form-data; boundary=' + this.getBoundary(),\n        };\n    }\n    /** Length of form-data (including footer length). */\n    getLength() {\n        return this._chunks.reduce((acc, cur) => acc + cur.length, this.getMultipartFooter().length);\n    }\n    getBuffer() {\n        const allChunks = [...this._chunks, this.getMultipartFooter()];\n        const totalBuffer = Buffer.alloc(this.getLength());\n        let i = 0;\n        for (const chunk of allChunks) {\n            for (let j = 0; j < chunk.length; i++, j++) {\n                totalBuffer[i] = chunk[j];\n            }\n        }\n        return totalBuffer;\n    }\n    getBoundary() {\n        if (!this._boundary) {\n            this.generateBoundary();\n        }\n        return this._boundary;\n    }\n    generateBoundary() {\n        // This generates a 50 character boundary similar to those used by Firefox.\n        let boundary = '--------------------------';\n        for (let i = 0; i < 24; i++) {\n            boundary += Math.floor(Math.random() * 10).toString(16);\n        }\n        this._boundary = boundary;\n    }\n    getMultipartHeader(field, value, contentType) {\n        // In this lib no need to guess more the content type, octet stream is ok of buffers\n        if (!contentType) {\n            contentType = value instanceof Buffer ? FormDataHelper.DEFAULT_CONTENT_TYPE : '';\n        }\n        const headers = {\n            'Content-Disposition': ['form-data', `name=\"${field}\"`],\n            'Content-Type': contentType,\n        };\n        let contents = '';\n        for (const [prop, header] of Object.entries(headers)) {\n            // skip nullish headers.\n            if (!header.length) {\n                continue;\n            }\n            contents += prop + ': ' + (0, helpers_1.arrayWrap)(header).join('; ') + FormDataHelper.LINE_BREAK;\n        }\n        return '--' + this.getBoundary() + FormDataHelper.LINE_BREAK + contents + FormDataHelper.LINE_BREAK;\n    }\n    getMultipartFooter() {\n        if (this._footerChunk) {\n            return this._footerChunk;\n        }\n        return this._footerChunk = Buffer.from('--' + this.getBoundary() + '--' + FormDataHelper.LINE_BREAK);\n    }\n}\nexports.FormDataHelper = FormDataHelper;\nFormDataHelper.LINE_BREAK = '\\r\\n';\nFormDataHelper.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}