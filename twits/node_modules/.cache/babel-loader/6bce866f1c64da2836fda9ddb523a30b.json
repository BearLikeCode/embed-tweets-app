{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TweetV2ListTweetsPaginator = exports.TweetV2UserLikedTweetsPaginator = exports.TweetBookmarksTimelineV2Paginator = exports.TweetUserMentionTimelineV2Paginator = exports.TweetUserTimelineV2Paginator = exports.TweetHomeTimelineV2Paginator = exports.QuotedTweetsTimelineV2Paginator = exports.TweetSearchAllV2Paginator = exports.TweetSearchRecentV2Paginator = void 0;\n\nconst v2_paginator_1 = require(\"./v2.paginator\");\n/** A generic PreviousableTwitterPaginator able to consume TweetV2 timelines with since_id, until_id and next_token (when available). */\n\n\nclass TweetTimelineV2Paginator extends v2_paginator_1.TwitterV2Paginator {\n  refreshInstanceFromResult(response, isNextPage) {\n    var _a;\n\n    const result = response.data;\n    const resultData = (_a = result.data) !== null && _a !== void 0 ? _a : [];\n    this._rateLimit = response.rateLimit;\n\n    if (!this._realData.data) {\n      this._realData.data = [];\n    }\n\n    if (isNextPage) {\n      this._realData.meta.oldest_id = result.meta.oldest_id;\n      this._realData.meta.result_count += result.meta.result_count;\n      this._realData.meta.next_token = result.meta.next_token;\n\n      this._realData.data.push(...resultData);\n    } else {\n      this._realData.meta.newest_id = result.meta.newest_id;\n      this._realData.meta.result_count += result.meta.result_count;\n\n      this._realData.data.unshift(...resultData);\n    }\n\n    this.updateIncludes(result);\n  }\n\n  getNextQueryParams(maxResults) {\n    this.assertUsable();\n    const params = { ...this.injectQueryParams(maxResults)\n    };\n\n    if (this._realData.meta.next_token) {\n      params.next_token = this._realData.meta.next_token;\n    } else {\n      if (params.start_time) {\n        // until_id and start_time are forbidden together for some reason, so convert start_time to a since_id.\n        params.since_id = this.dateStringToSnowflakeId(params.start_time);\n        delete params.start_time;\n      }\n\n      if (params.end_time) {\n        // until_id overrides end_time, so delete it\n        delete params.end_time;\n      }\n\n      params.until_id = this._realData.meta.oldest_id;\n    }\n\n    return params;\n  }\n\n  getPreviousQueryParams(maxResults) {\n    this.assertUsable();\n    return { ...this.injectQueryParams(maxResults),\n      since_id: this._realData.meta.newest_id\n    };\n  }\n\n  getPageLengthFromRequest(result) {\n    var _a, _b;\n\n    return (_b = (_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n  }\n\n  isFetchLastOver(result) {\n    var _a;\n\n    return !((_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) || !this.canFetchNextPage(result.data);\n  }\n\n  canFetchNextPage(result) {\n    return !!result.meta.next_token;\n  }\n\n  getItemArray() {\n    return this.tweets;\n  }\n\n  dateStringToSnowflakeId(dateStr) {\n    const TWITTER_START_EPOCH = BigInt('1288834974657');\n    const date = new Date(dateStr);\n\n    if (isNaN(date.valueOf())) {\n      throw new Error('Unable to convert start_time/end_time to a valid date. A ISO 8601 DateTime is excepted, please check your input.');\n    }\n\n    const dateTimestamp = BigInt(date.valueOf());\n    return (dateTimestamp - TWITTER_START_EPOCH << BigInt('22')).toString();\n  }\n  /**\n   * Tweets returned by paginator.\n   */\n\n\n  get tweets() {\n    var _a;\n\n    return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n  }\n\n  get meta() {\n    return super.meta;\n  }\n\n}\n/** A generic PreviousableTwitterPaginator able to consume TweetV2 timelines with pagination_tokens. */\n\n\nclass TweetPaginableTimelineV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n  refreshInstanceFromResult(response, isNextPage) {\n    super.refreshInstanceFromResult(response, isNextPage);\n    const result = response.data;\n\n    if (isNextPage) {\n      this._realData.meta.oldest_id = result.meta.oldest_id;\n    } else {\n      this._realData.meta.newest_id = result.meta.newest_id;\n    }\n  }\n\n  getItemArray() {\n    return this.tweets;\n  }\n  /**\n   * Tweets returned by paginator.\n   */\n\n\n  get tweets() {\n    var _a;\n\n    return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n  }\n\n  get meta() {\n    return super.meta;\n  }\n\n} // ----------------\n// - Tweet search -\n// ----------------\n\n\nclass TweetSearchRecentV2Paginator extends TweetTimelineV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'tweets/search/recent';\n  }\n\n}\n\nexports.TweetSearchRecentV2Paginator = TweetSearchRecentV2Paginator;\n\nclass TweetSearchAllV2Paginator extends TweetTimelineV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'tweets/search/all';\n  }\n\n}\n\nexports.TweetSearchAllV2Paginator = TweetSearchAllV2Paginator;\n\nclass QuotedTweetsTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'tweets/:id/quote_tweets';\n  }\n\n}\n\nexports.QuotedTweetsTimelineV2Paginator = QuotedTweetsTimelineV2Paginator; // -----------------\n// - Home timeline -\n// -----------------\n\nclass TweetHomeTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'users/:id/timelines/reverse_chronological';\n  }\n\n}\n\nexports.TweetHomeTimelineV2Paginator = TweetHomeTimelineV2Paginator;\n\nclass TweetUserTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'users/:id/tweets';\n  }\n\n}\n\nexports.TweetUserTimelineV2Paginator = TweetUserTimelineV2Paginator;\n\nclass TweetUserMentionTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'users/:id/mentions';\n  }\n\n}\n\nexports.TweetUserMentionTimelineV2Paginator = TweetUserMentionTimelineV2Paginator; // -------------\n// - Bookmarks -\n// -------------\n\nclass TweetBookmarksTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'users/:id/bookmarks';\n  }\n\n}\n\nexports.TweetBookmarksTimelineV2Paginator = TweetBookmarksTimelineV2Paginator; // ---------------------------------------------------------------------------------\n// - Tweet lists (consume tweets with pagination tokens instead of since/until id) -\n// ---------------------------------------------------------------------------------\n\n/** A generic TwitterPaginator able to consume TweetV2 timelines. */\n\nclass TweetListV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n  /**\n   * Tweets returned by paginator.\n   */\n  get tweets() {\n    var _a;\n\n    return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n  }\n\n  get meta() {\n    return super.meta;\n  }\n\n  getItemArray() {\n    return this.tweets;\n  }\n\n}\n\nclass TweetV2UserLikedTweetsPaginator extends TweetListV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'users/:id/liked_tweets';\n  }\n\n}\n\nexports.TweetV2UserLikedTweetsPaginator = TweetV2UserLikedTweetsPaginator;\n\nclass TweetV2ListTweetsPaginator extends TweetListV2Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'lists/:id/tweets';\n  }\n\n}\n\nexports.TweetV2ListTweetsPaginator = TweetV2ListTweetsPaginator;","map":{"version":3,"names":["Object","defineProperty","exports","value","TweetV2ListTweetsPaginator","TweetV2UserLikedTweetsPaginator","TweetBookmarksTimelineV2Paginator","TweetUserMentionTimelineV2Paginator","TweetUserTimelineV2Paginator","TweetHomeTimelineV2Paginator","QuotedTweetsTimelineV2Paginator","TweetSearchAllV2Paginator","TweetSearchRecentV2Paginator","v2_paginator_1","require","TweetTimelineV2Paginator","TwitterV2Paginator","refreshInstanceFromResult","response","isNextPage","_a","result","data","resultData","_rateLimit","rateLimit","_realData","meta","oldest_id","result_count","next_token","push","newest_id","unshift","updateIncludes","getNextQueryParams","maxResults","assertUsable","params","injectQueryParams","start_time","since_id","dateStringToSnowflakeId","end_time","until_id","getPreviousQueryParams","getPageLengthFromRequest","_b","length","isFetchLastOver","canFetchNextPage","getItemArray","tweets","dateStr","TWITTER_START_EPOCH","BigInt","date","Date","isNaN","valueOf","Error","dateTimestamp","toString","TweetPaginableTimelineV2Paginator","TimelineV2Paginator","constructor","arguments","_endpoint","TweetListV2Paginator"],"sources":["/Users/user/Sites/twits_app/twits/node_modules/twitter-api-v2/dist/paginators/tweet.paginator.v2.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TweetV2ListTweetsPaginator = exports.TweetV2UserLikedTweetsPaginator = exports.TweetBookmarksTimelineV2Paginator = exports.TweetUserMentionTimelineV2Paginator = exports.TweetUserTimelineV2Paginator = exports.TweetHomeTimelineV2Paginator = exports.QuotedTweetsTimelineV2Paginator = exports.TweetSearchAllV2Paginator = exports.TweetSearchRecentV2Paginator = void 0;\nconst v2_paginator_1 = require(\"./v2.paginator\");\n/** A generic PreviousableTwitterPaginator able to consume TweetV2 timelines with since_id, until_id and next_token (when available). */\nclass TweetTimelineV2Paginator extends v2_paginator_1.TwitterV2Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        var _a;\n        const result = response.data;\n        const resultData = (_a = result.data) !== null && _a !== void 0 ? _a : [];\n        this._rateLimit = response.rateLimit;\n        if (!this._realData.data) {\n            this._realData.data = [];\n        }\n        if (isNextPage) {\n            this._realData.meta.oldest_id = result.meta.oldest_id;\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.meta.next_token = result.meta.next_token;\n            this._realData.data.push(...resultData);\n        }\n        else {\n            this._realData.meta.newest_id = result.meta.newest_id;\n            this._realData.meta.result_count += result.meta.result_count;\n            this._realData.data.unshift(...resultData);\n        }\n        this.updateIncludes(result);\n    }\n    getNextQueryParams(maxResults) {\n        this.assertUsable();\n        const params = { ...this.injectQueryParams(maxResults) };\n        if (this._realData.meta.next_token) {\n            params.next_token = this._realData.meta.next_token;\n        }\n        else {\n            if (params.start_time) {\n                // until_id and start_time are forbidden together for some reason, so convert start_time to a since_id.\n                params.since_id = this.dateStringToSnowflakeId(params.start_time);\n                delete params.start_time;\n            }\n            if (params.end_time) {\n                // until_id overrides end_time, so delete it\n                delete params.end_time;\n            }\n            params.until_id = this._realData.meta.oldest_id;\n        }\n        return params;\n    }\n    getPreviousQueryParams(maxResults) {\n        this.assertUsable();\n        return {\n            ...this.injectQueryParams(maxResults),\n            since_id: this._realData.meta.newest_id,\n        };\n    }\n    getPageLengthFromRequest(result) {\n        var _a, _b;\n        return (_b = (_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n    }\n    isFetchLastOver(result) {\n        var _a;\n        return !((_a = result.data.data) === null || _a === void 0 ? void 0 : _a.length) || !this.canFetchNextPage(result.data);\n    }\n    canFetchNextPage(result) {\n        return !!result.meta.next_token;\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n    dateStringToSnowflakeId(dateStr) {\n        const TWITTER_START_EPOCH = BigInt('1288834974657');\n        const date = new Date(dateStr);\n        if (isNaN(date.valueOf())) {\n            throw new Error('Unable to convert start_time/end_time to a valid date. A ISO 8601 DateTime is excepted, please check your input.');\n        }\n        const dateTimestamp = BigInt(date.valueOf());\n        return ((dateTimestamp - TWITTER_START_EPOCH) << BigInt('22')).toString();\n    }\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\n/** A generic PreviousableTwitterPaginator able to consume TweetV2 timelines with pagination_tokens. */\nclass TweetPaginableTimelineV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n    refreshInstanceFromResult(response, isNextPage) {\n        super.refreshInstanceFromResult(response, isNextPage);\n        const result = response.data;\n        if (isNextPage) {\n            this._realData.meta.oldest_id = result.meta.oldest_id;\n        }\n        else {\n            this._realData.meta.newest_id = result.meta.newest_id;\n        }\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n}\n// ----------------\n// - Tweet search -\n// ----------------\nclass TweetSearchRecentV2Paginator extends TweetTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/search/recent';\n    }\n}\nexports.TweetSearchRecentV2Paginator = TweetSearchRecentV2Paginator;\nclass TweetSearchAllV2Paginator extends TweetTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/search/all';\n    }\n}\nexports.TweetSearchAllV2Paginator = TweetSearchAllV2Paginator;\nclass QuotedTweetsTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'tweets/:id/quote_tweets';\n    }\n}\nexports.QuotedTweetsTimelineV2Paginator = QuotedTweetsTimelineV2Paginator;\n// -----------------\n// - Home timeline -\n// -----------------\nclass TweetHomeTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/timelines/reverse_chronological';\n    }\n}\nexports.TweetHomeTimelineV2Paginator = TweetHomeTimelineV2Paginator;\nclass TweetUserTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/tweets';\n    }\n}\nexports.TweetUserTimelineV2Paginator = TweetUserTimelineV2Paginator;\nclass TweetUserMentionTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/mentions';\n    }\n}\nexports.TweetUserMentionTimelineV2Paginator = TweetUserMentionTimelineV2Paginator;\n// -------------\n// - Bookmarks -\n// -------------\nclass TweetBookmarksTimelineV2Paginator extends TweetPaginableTimelineV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/bookmarks';\n    }\n}\nexports.TweetBookmarksTimelineV2Paginator = TweetBookmarksTimelineV2Paginator;\n// ---------------------------------------------------------------------------------\n// - Tweet lists (consume tweets with pagination tokens instead of since/until id) -\n// ---------------------------------------------------------------------------------\n/** A generic TwitterPaginator able to consume TweetV2 timelines. */\nclass TweetListV2Paginator extends v2_paginator_1.TimelineV2Paginator {\n    /**\n     * Tweets returned by paginator.\n     */\n    get tweets() {\n        var _a;\n        return (_a = this._realData.data) !== null && _a !== void 0 ? _a : [];\n    }\n    get meta() {\n        return super.meta;\n    }\n    getItemArray() {\n        return this.tweets;\n    }\n}\nclass TweetV2UserLikedTweetsPaginator extends TweetListV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/:id/liked_tweets';\n    }\n}\nexports.TweetV2UserLikedTweetsPaginator = TweetV2UserLikedTweetsPaginator;\nclass TweetV2ListTweetsPaginator extends TweetListV2Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'lists/:id/tweets';\n    }\n}\nexports.TweetV2ListTweetsPaginator = TweetV2ListTweetsPaginator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}