{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FriendshipsOutgoingV1Paginator = exports.FriendshipsIncomingV1Paginator = exports.UserSearchV1Paginator = void 0;\n\nconst TwitterPaginator_1 = __importDefault(require(\"./TwitterPaginator\"));\n\nconst paginator_v1_1 = require(\"./paginator.v1\");\n/** A generic TwitterPaginator able to consume TweetV1 timelines. */\n\n\nclass UserSearchV1Paginator extends TwitterPaginator_1.default {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'users/search.json';\n  }\n\n  refreshInstanceFromResult(response, isNextPage) {\n    const result = response.data;\n    this._rateLimit = response.rateLimit;\n\n    if (isNextPage) {\n      this._realData.push(...result);\n    }\n  }\n\n  getNextQueryParams(maxResults) {\n    var _a;\n\n    const previousPage = Number((_a = this._queryParams.page) !== null && _a !== void 0 ? _a : '1');\n    return { ...this._queryParams,\n      page: previousPage + 1,\n      ...(maxResults ? {\n        count: maxResults\n      } : {})\n    };\n  }\n\n  getPageLengthFromRequest(result) {\n    return result.data.length;\n  }\n\n  isFetchLastOver(result) {\n    return !result.data.length;\n  }\n\n  canFetchNextPage(result) {\n    return result.length > 0;\n  }\n\n  getItemArray() {\n    return this.users;\n  }\n  /**\n   * Users returned by paginator.\n   */\n\n\n  get users() {\n    return this._realData;\n  }\n\n}\n\nexports.UserSearchV1Paginator = UserSearchV1Paginator;\n\nclass FriendshipsIncomingV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'friendships/incoming.json';\n    this._maxResultsWhenFetchLast = 5000;\n  }\n\n  refreshInstanceFromResult(response, isNextPage) {\n    const result = response.data;\n    this._rateLimit = response.rateLimit;\n\n    if (isNextPage) {\n      this._realData.ids.push(...result.ids);\n\n      this._realData.next_cursor = result.next_cursor;\n    }\n  }\n\n  getPageLengthFromRequest(result) {\n    return result.data.ids.length;\n  }\n\n  getItemArray() {\n    return this.ids;\n  }\n  /**\n   * Users IDs returned by paginator.\n   */\n\n\n  get ids() {\n    return this._realData.ids;\n  }\n\n}\n\nexports.FriendshipsIncomingV1Paginator = FriendshipsIncomingV1Paginator;\n\nclass FriendshipsOutgoingV1Paginator extends FriendshipsIncomingV1Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'friendships/outgoing.json';\n  }\n\n}\n\nexports.FriendshipsOutgoingV1Paginator = FriendshipsOutgoingV1Paginator;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","FriendshipsOutgoingV1Paginator","FriendshipsIncomingV1Paginator","UserSearchV1Paginator","TwitterPaginator_1","require","paginator_v1_1","default","constructor","arguments","_endpoint","refreshInstanceFromResult","response","isNextPage","result","data","_rateLimit","rateLimit","_realData","push","getNextQueryParams","maxResults","_a","previousPage","Number","_queryParams","page","count","getPageLengthFromRequest","length","isFetchLastOver","canFetchNextPage","getItemArray","users","CursoredV1Paginator","_maxResultsWhenFetchLast","ids","next_cursor"],"sources":["/Users/user/Sites/twits_app/twits/node_modules/twitter-api-v2/dist/paginators/user.paginator.v1.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FriendshipsOutgoingV1Paginator = exports.FriendshipsIncomingV1Paginator = exports.UserSearchV1Paginator = void 0;\nconst TwitterPaginator_1 = __importDefault(require(\"./TwitterPaginator\"));\nconst paginator_v1_1 = require(\"./paginator.v1\");\n/** A generic TwitterPaginator able to consume TweetV1 timelines. */\nclass UserSearchV1Paginator extends TwitterPaginator_1.default {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/search.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.push(...result);\n        }\n    }\n    getNextQueryParams(maxResults) {\n        var _a;\n        const previousPage = Number((_a = this._queryParams.page) !== null && _a !== void 0 ? _a : '1');\n        return {\n            ...this._queryParams,\n            page: previousPage + 1,\n            ...maxResults ? { count: maxResults } : {},\n        };\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.length;\n    }\n    isFetchLastOver(result) {\n        return !result.data.length;\n    }\n    canFetchNextPage(result) {\n        return result.length > 0;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData;\n    }\n}\nexports.UserSearchV1Paginator = UserSearchV1Paginator;\nclass FriendshipsIncomingV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friendships/incoming.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\nexports.FriendshipsIncomingV1Paginator = FriendshipsIncomingV1Paginator;\nclass FriendshipsOutgoingV1Paginator extends FriendshipsIncomingV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friendships/outgoing.json';\n    }\n}\nexports.FriendshipsOutgoingV1Paginator = FriendshipsOutgoingV1Paginator;\n"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;IAAE,WAAWA;EAAb,CAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,8BAAR,GAAyCF,OAAO,CAACG,8BAAR,GAAyCH,OAAO,CAACI,qBAAR,GAAgC,KAAK,CAAvH;;AACA,MAAMC,kBAAkB,GAAGV,eAAe,CAACW,OAAO,CAAC,oBAAD,CAAR,CAA1C;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,gBAAD,CAA9B;AACA;;;AACA,MAAMF,qBAAN,SAAoCC,kBAAkB,CAACG,OAAvD,CAA+D;EAC3DC,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAKC,SAAL,GAAiB,mBAAjB;EACH;;EACDC,yBAAyB,CAACC,QAAD,EAAWC,UAAX,EAAuB;IAC5C,MAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAxB;IACA,KAAKC,UAAL,GAAkBJ,QAAQ,CAACK,SAA3B;;IACA,IAAIJ,UAAJ,EAAgB;MACZ,KAAKK,SAAL,CAAeC,IAAf,CAAoB,GAAGL,MAAvB;IACH;EACJ;;EACDM,kBAAkB,CAACC,UAAD,EAAa;IAC3B,IAAIC,EAAJ;;IACA,MAAMC,YAAY,GAAGC,MAAM,CAAC,CAACF,EAAE,GAAG,KAAKG,YAAL,CAAkBC,IAAxB,MAAkC,IAAlC,IAA0CJ,EAAE,KAAK,KAAK,CAAtD,GAA0DA,EAA1D,GAA+D,GAAhE,CAA3B;IACA,OAAO,EACH,GAAG,KAAKG,YADL;MAEHC,IAAI,EAAEH,YAAY,GAAG,CAFlB;MAGH,IAAGF,UAAU,GAAG;QAAEM,KAAK,EAAEN;MAAT,CAAH,GAA2B,EAAxC;IAHG,CAAP;EAKH;;EACDO,wBAAwB,CAACd,MAAD,EAAS;IAC7B,OAAOA,MAAM,CAACC,IAAP,CAAYc,MAAnB;EACH;;EACDC,eAAe,CAAChB,MAAD,EAAS;IACpB,OAAO,CAACA,MAAM,CAACC,IAAP,CAAYc,MAApB;EACH;;EACDE,gBAAgB,CAACjB,MAAD,EAAS;IACrB,OAAOA,MAAM,CAACe,MAAP,GAAgB,CAAvB;EACH;;EACDG,YAAY,GAAG;IACX,OAAO,KAAKC,KAAZ;EACH;EACD;AACJ;AACA;;;EACa,IAALA,KAAK,GAAG;IACR,OAAO,KAAKf,SAAZ;EACH;;AAtC0D;;AAwC/DnB,OAAO,CAACI,qBAAR,GAAgCA,qBAAhC;;AACA,MAAMD,8BAAN,SAA6CI,cAAc,CAAC4B,mBAA5D,CAAgF;EAC5E1B,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAKC,SAAL,GAAiB,2BAAjB;IACA,KAAKyB,wBAAL,GAAgC,IAAhC;EACH;;EACDxB,yBAAyB,CAACC,QAAD,EAAWC,UAAX,EAAuB;IAC5C,MAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAxB;IACA,KAAKC,UAAL,GAAkBJ,QAAQ,CAACK,SAA3B;;IACA,IAAIJ,UAAJ,EAAgB;MACZ,KAAKK,SAAL,CAAekB,GAAf,CAAmBjB,IAAnB,CAAwB,GAAGL,MAAM,CAACsB,GAAlC;;MACA,KAAKlB,SAAL,CAAemB,WAAf,GAA6BvB,MAAM,CAACuB,WAApC;IACH;EACJ;;EACDT,wBAAwB,CAACd,MAAD,EAAS;IAC7B,OAAOA,MAAM,CAACC,IAAP,CAAYqB,GAAZ,CAAgBP,MAAvB;EACH;;EACDG,YAAY,GAAG;IACX,OAAO,KAAKI,GAAZ;EACH;EACD;AACJ;AACA;;;EACW,IAAHA,GAAG,GAAG;IACN,OAAO,KAAKlB,SAAL,CAAekB,GAAtB;EACH;;AAzB2E;;AA2BhFrC,OAAO,CAACG,8BAAR,GAAyCA,8BAAzC;;AACA,MAAMD,8BAAN,SAA6CC,8BAA7C,CAA4E;EACxEM,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAKC,SAAL,GAAiB,2BAAjB;EACH;;AAJuE;;AAM5EX,OAAO,CAACE,8BAAR,GAAyCA,8BAAzC"},"metadata":{},"sourceType":"script"}