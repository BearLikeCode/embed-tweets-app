{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readNextPartOf = exports.sleepSecs = exports.getMediaCategoryByMime = exports.getMimeType = exports.getFileSizeFromFileHandle = exports.getFileHandle = exports.readFileIntoBuffer = void 0;\n\nconst fs = __importStar(require(\"fs\"));\n\nconst helpers_1 = require(\"../helpers\");\n\nconst types_1 = require(\"../types\");\n\nasync function readFileIntoBuffer(file) {\n  const handle = await getFileHandle(file);\n\n  if (typeof handle === 'number') {\n    return new Promise((resolve, reject) => {\n      fs.readFile(handle, (err, data) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve(data);\n      });\n    });\n  } else if (handle instanceof Buffer) {\n    return handle;\n  } else {\n    return handle.readFile();\n  }\n}\n\nexports.readFileIntoBuffer = readFileIntoBuffer;\n\nfunction getFileHandle(file) {\n  if (typeof file === 'string') {\n    return fs.promises.open(file, 'r');\n  } else if (typeof file === 'number') {\n    return file;\n  } else if (typeof file === 'object' && !(file instanceof Buffer)) {\n    return file;\n  } else if (!(file instanceof Buffer)) {\n    throw new Error('Given file is not valid, please check its type.');\n  } else {\n    return file;\n  }\n}\n\nexports.getFileHandle = getFileHandle;\n\nasync function getFileSizeFromFileHandle(fileHandle) {\n  // Get the file size\n  if (typeof fileHandle === 'number') {\n    const stats = await new Promise((resolve, reject) => {\n      fs.fstat(fileHandle, (err, stats) => {\n        if (err) reject(err);\n        resolve(stats);\n      });\n    });\n    return stats.size;\n  } else if (fileHandle instanceof Buffer) {\n    return fileHandle.length;\n  } else {\n    return (await fileHandle.stat()).size;\n  }\n}\n\nexports.getFileSizeFromFileHandle = getFileSizeFromFileHandle;\n\nfunction getMimeType(file, type, mimeType) {\n  if (typeof mimeType === 'string') {\n    return mimeType;\n  } else if (typeof file === 'string' && !type) {\n    return getMimeByName(file);\n  } else if (typeof type === 'string') {\n    return getMimeByType(type);\n  }\n\n  throw new Error('You must specify type if file is a file handle or Buffer.');\n}\n\nexports.getMimeType = getMimeType;\n\nfunction getMimeByName(name) {\n  if (name.endsWith('.jpeg') || name.endsWith('.jpg')) return types_1.EUploadMimeType.Jpeg;\n  if (name.endsWith('.png')) return types_1.EUploadMimeType.Png;\n  if (name.endsWith('.webp')) return types_1.EUploadMimeType.Webp;\n  if (name.endsWith('.gif')) return types_1.EUploadMimeType.Gif;\n  if (name.endsWith('.mpeg4') || name.endsWith('.mp4')) return types_1.EUploadMimeType.Mp4;\n  if (name.endsWith('.srt')) return types_1.EUploadMimeType.Srt;\n  (0, helpers_1.safeDeprecationWarning)({\n    instance: 'TwitterApiv1ReadWrite',\n    method: 'uploadMedia',\n    problem: `options.mimeType is missing and filename couldn't help to resolve MIME type, so it will fallback to image/jpeg`,\n    resolution: `If you except to give filenames without extensions, please specify explicitlty the MIME type using options.mimeType`\n  });\n  return types_1.EUploadMimeType.Jpeg;\n}\n\nfunction getMimeByType(type) {\n  (0, helpers_1.safeDeprecationWarning)({\n    instance: 'TwitterApiv1ReadWrite',\n    method: 'uploadMedia',\n    problem: `you're using options.type`,\n    resolution: `Remove options.type argument and migrate to options.mimeType which takes the real MIME type. ` + `If you're using type=longmp4, add options.longVideo alongside of mimeType=EUploadMimeType.Mp4`\n  });\n  if (type === 'gif') return types_1.EUploadMimeType.Gif;\n  if (type === 'jpg') return types_1.EUploadMimeType.Jpeg;\n  if (type === 'png') return types_1.EUploadMimeType.Png;\n  if (type === 'webp') return types_1.EUploadMimeType.Webp;\n  if (type === 'srt') return types_1.EUploadMimeType.Srt;\n  if (type === 'mp4' || type === 'longmp4') return types_1.EUploadMimeType.Mp4;\n  return type;\n}\n\nfunction getMediaCategoryByMime(name, target) {\n  if (name === types_1.EUploadMimeType.Mp4) return target === 'tweet' ? 'TweetVideo' : 'DmVideo';\n  if (name === types_1.EUploadMimeType.Gif) return target === 'tweet' ? 'TweetGif' : 'DmGif';\n  if (name === types_1.EUploadMimeType.Srt) return 'Subtitles';else return target === 'tweet' ? 'TweetImage' : 'DmImage';\n}\n\nexports.getMediaCategoryByMime = getMediaCategoryByMime;\n\nfunction sleepSecs(seconds) {\n  return new Promise(resolve => setTimeout(resolve, seconds * 1000));\n}\n\nexports.sleepSecs = sleepSecs;\n\nasync function readNextPartOf(file, chunkLength) {\n  let bufferOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let buffer = arguments.length > 3 ? arguments[3] : undefined;\n\n  if (file instanceof Buffer) {\n    const rt = file.slice(bufferOffset, bufferOffset + chunkLength);\n    return [rt, rt.length];\n  }\n\n  if (!buffer) {\n    throw new Error('Well, we will need a buffer to store file content.');\n  }\n\n  let bytesRead;\n\n  if (typeof file === 'number') {\n    bytesRead = await new Promise((resolve, reject) => {\n      fs.read(file, buffer, 0, chunkLength, bufferOffset, (err, nread) => {\n        if (err) reject(err);\n        resolve(nread);\n      });\n    });\n  } else {\n    const res = await file.read(buffer, 0, chunkLength, bufferOffset);\n    bytesRead = res.bytesRead;\n  }\n\n  return [buffer, bytesRead];\n}\n\nexports.readNextPartOf = readNextPartOf;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","readNextPartOf","sleepSecs","getMediaCategoryByMime","getMimeType","getFileSizeFromFileHandle","getFileHandle","readFileIntoBuffer","fs","require","helpers_1","types_1","file","handle","Promise","resolve","reject","readFile","err","data","Buffer","promises","open","Error","fileHandle","stats","fstat","size","length","stat","type","mimeType","getMimeByName","getMimeByType","name","endsWith","EUploadMimeType","Jpeg","Png","Webp","Gif","Mp4","Srt","safeDeprecationWarning","instance","method","problem","resolution","target","seconds","setTimeout","chunkLength","bufferOffset","buffer","rt","slice","bytesRead","read","nread","res"],"sources":["/Users/user/Sites/twits_app/twits/node_modules/twitter-api-v2/dist/v1/media-helpers.v1.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readNextPartOf = exports.sleepSecs = exports.getMediaCategoryByMime = exports.getMimeType = exports.getFileSizeFromFileHandle = exports.getFileHandle = exports.readFileIntoBuffer = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst helpers_1 = require(\"../helpers\");\nconst types_1 = require(\"../types\");\nasync function readFileIntoBuffer(file) {\n    const handle = await getFileHandle(file);\n    if (typeof handle === 'number') {\n        return new Promise((resolve, reject) => {\n            fs.readFile(handle, (err, data) => {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(data);\n            });\n        });\n    }\n    else if (handle instanceof Buffer) {\n        return handle;\n    }\n    else {\n        return handle.readFile();\n    }\n}\nexports.readFileIntoBuffer = readFileIntoBuffer;\nfunction getFileHandle(file) {\n    if (typeof file === 'string') {\n        return fs.promises.open(file, 'r');\n    }\n    else if (typeof file === 'number') {\n        return file;\n    }\n    else if (typeof file === 'object' && !(file instanceof Buffer)) {\n        return file;\n    }\n    else if (!(file instanceof Buffer)) {\n        throw new Error('Given file is not valid, please check its type.');\n    }\n    else {\n        return file;\n    }\n}\nexports.getFileHandle = getFileHandle;\nasync function getFileSizeFromFileHandle(fileHandle) {\n    // Get the file size\n    if (typeof fileHandle === 'number') {\n        const stats = await new Promise((resolve, reject) => {\n            fs.fstat(fileHandle, (err, stats) => {\n                if (err)\n                    reject(err);\n                resolve(stats);\n            });\n        });\n        return stats.size;\n    }\n    else if (fileHandle instanceof Buffer) {\n        return fileHandle.length;\n    }\n    else {\n        return (await fileHandle.stat()).size;\n    }\n}\nexports.getFileSizeFromFileHandle = getFileSizeFromFileHandle;\nfunction getMimeType(file, type, mimeType) {\n    if (typeof mimeType === 'string') {\n        return mimeType;\n    }\n    else if (typeof file === 'string' && !type) {\n        return getMimeByName(file);\n    }\n    else if (typeof type === 'string') {\n        return getMimeByType(type);\n    }\n    throw new Error('You must specify type if file is a file handle or Buffer.');\n}\nexports.getMimeType = getMimeType;\nfunction getMimeByName(name) {\n    if (name.endsWith('.jpeg') || name.endsWith('.jpg'))\n        return types_1.EUploadMimeType.Jpeg;\n    if (name.endsWith('.png'))\n        return types_1.EUploadMimeType.Png;\n    if (name.endsWith('.webp'))\n        return types_1.EUploadMimeType.Webp;\n    if (name.endsWith('.gif'))\n        return types_1.EUploadMimeType.Gif;\n    if (name.endsWith('.mpeg4') || name.endsWith('.mp4'))\n        return types_1.EUploadMimeType.Mp4;\n    if (name.endsWith('.srt'))\n        return types_1.EUploadMimeType.Srt;\n    (0, helpers_1.safeDeprecationWarning)({\n        instance: 'TwitterApiv1ReadWrite',\n        method: 'uploadMedia',\n        problem: `options.mimeType is missing and filename couldn't help to resolve MIME type, so it will fallback to image/jpeg`,\n        resolution: `If you except to give filenames without extensions, please specify explicitlty the MIME type using options.mimeType`,\n    });\n    return types_1.EUploadMimeType.Jpeg;\n}\nfunction getMimeByType(type) {\n    (0, helpers_1.safeDeprecationWarning)({\n        instance: 'TwitterApiv1ReadWrite',\n        method: 'uploadMedia',\n        problem: `you're using options.type`,\n        resolution: `Remove options.type argument and migrate to options.mimeType which takes the real MIME type. ` +\n            `If you're using type=longmp4, add options.longVideo alongside of mimeType=EUploadMimeType.Mp4`,\n    });\n    if (type === 'gif')\n        return types_1.EUploadMimeType.Gif;\n    if (type === 'jpg')\n        return types_1.EUploadMimeType.Jpeg;\n    if (type === 'png')\n        return types_1.EUploadMimeType.Png;\n    if (type === 'webp')\n        return types_1.EUploadMimeType.Webp;\n    if (type === 'srt')\n        return types_1.EUploadMimeType.Srt;\n    if (type === 'mp4' || type === 'longmp4')\n        return types_1.EUploadMimeType.Mp4;\n    return type;\n}\nfunction getMediaCategoryByMime(name, target) {\n    if (name === types_1.EUploadMimeType.Mp4)\n        return target === 'tweet' ? 'TweetVideo' : 'DmVideo';\n    if (name === types_1.EUploadMimeType.Gif)\n        return target === 'tweet' ? 'TweetGif' : 'DmGif';\n    if (name === types_1.EUploadMimeType.Srt)\n        return 'Subtitles';\n    else\n        return target === 'tweet' ? 'TweetImage' : 'DmImage';\n}\nexports.getMediaCategoryByMime = getMediaCategoryByMime;\nfunction sleepSecs(seconds) {\n    return new Promise(resolve => setTimeout(resolve, seconds * 1000));\n}\nexports.sleepSecs = sleepSecs;\nasync function readNextPartOf(file, chunkLength, bufferOffset = 0, buffer) {\n    if (file instanceof Buffer) {\n        const rt = file.slice(bufferOffset, bufferOffset + chunkLength);\n        return [rt, rt.length];\n    }\n    if (!buffer) {\n        throw new Error('Well, we will need a buffer to store file content.');\n    }\n    let bytesRead;\n    if (typeof file === 'number') {\n        bytesRead = await new Promise((resolve, reject) => {\n            fs.read(file, buffer, 0, chunkLength, bufferOffset, (err, nread) => {\n                if (err)\n                    reject(err);\n                resolve(nread);\n            });\n        });\n    }\n    else {\n        const res = await file.read(buffer, 0, chunkLength, bufferOffset);\n        bytesRead = res.bytesRead;\n    }\n    return [buffer, bytesRead];\n}\nexports.readNextPartOf = readNextPartOf;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}